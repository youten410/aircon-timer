import 'package:flutter/material.dart';
import 'dart:async'; // ËøΩÂä†

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: AirConTimer(),
    );
  }
}

class AirConTimer extends StatefulWidget {
  const AirConTimer({Key? key}) : super(key: key);

  @override
  State<AirConTimer> createState() => _AirConTimerState();
}

class _AirConTimerState extends State<AirConTimer> {
  //Time PickerÁî®„ÅÆÂ§âÊï∞„ÇíÂÆöÁæ©
  TimeOfDay selectedTime = TimeOfDay.now();

  // ËøΩÂä†: ÁèæÂú®ÊôÇÂàª„Çí‰øùÊåÅ„Åô„ÇãÂ§âÊï∞
  TimeOfDay nowTime = TimeOfDay.now();

  // ËøΩÂä†: Timer„Çí‰øùÊåÅ„Åô„ÇãÂ§âÊï∞
  Timer? timer;

  @override
  void initState() {
    super.initState();

    // ËøΩÂä†: ÂàùÊúüÂåñÊôÇ„Å´ÁèæÂú®ÊôÇÂàª„Çí1Áßí„Åî„Å®„Å´Êõ¥Êñ∞„Åô„ÇãTimer„ÇíË®≠ÂÆö
    timer = Timer.periodic(
      Duration(seconds: 1),
      (Timer t) => setState(() {
        nowTime = TimeOfDay.now();
      }),
    );
  }

  @override
  void dispose() {
    // ËøΩÂä†: Timer„ÇíÁ†¥Ê£Ñ
    timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: <Widget>[
            Text(
              "ÁèæÂú®„ÅÆÊôÇÂàª",
              style: TextStyle(fontSize: 20.0),
            ),
            Text(
              // Â§âÊõ¥: ÁèæÂú®ÊôÇÂàª„ÇíË°®Á§∫
              '${nowTime.hour.toString().padLeft(2, "0")}:${nowTime.minute.toString().padLeft(2, "0")}',
              style: TextStyle(fontSize: 40.0),
            ),
            SizedBox(
              height: 50,
            ),
            Text(
              "ON/OFF„Å´„Åó„Åü„ÅÑÊôÇÂàª",
              style: TextStyle(fontSize: 20.0),
            ),
            Text(
              '${selectedTime.hour.toString().padLeft(2, "0")}:${selectedTime.minute.toString().padLeft(2, "0")}',
              style: TextStyle(fontSize: 40.0),
            ),
            ElevatedButton(
              onPressed: () => _selectTime(context),
              child: const Text('ÊôÇÂàªÈÅ∏Êäû'),
              style: ElevatedButton.styleFrom(
                  shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20))),
            ),
            SizedBox(
              height: 50,
            ),
            Text(
              "6.5ÊôÇÈñì",
              style: TextStyle(fontSize: 40.0),
            ),
            SizedBox(
              height: 50,
            ),
            Text(
              "„Ç®„Ç¢„Ç≥„É≥„ÅÆÊ∏©Â∫¶„ÅØ„Äá‚ÑÉ„Åå„Ç®„Ç≥„Åß„Åôüåè",
              style: TextStyle(fontSize: 15.0),
            ),
          ],
        ),
      ),
    );
  }

  Future<void> _selectTime(BuildContext context) async {
    final TimeOfDay? picked = await showTimePicker(
      context: context,
      initialTime: selectedTime,
      initialEntryMode: TimePickerEntryMode.input,
      builder: (BuildContext context, Widget? child) {
        return MediaQuery(
          data: MediaQuery.of(context).copyWith(alwaysUse24HourFormat: true),
          child: child!,
        );
      },
    );

    if (picked != null) {
      setState(() {
        selectedTime = picked;
      });
    }
  }
}
